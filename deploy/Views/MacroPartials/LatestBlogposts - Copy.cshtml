@using Umbraco.Extensions
@using tvingsbakken.org
@using Umbraco.Cms.Web.Common.PublishedModels
@using Umbraco.Cms.Web.Common.Views
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Umbraco.Cms.Web;

@{
    //var home = (Home)Model.Root();
    var startNodeId = Model.MacroParameters["startNodeId"] != null ? Model.MacroParameters["startNodeId"] : Model.Content.Id;
    var numberOfPosts = 3;
    if (Model.MacroParameters["numberOfPosts"] != null)
    {
        int.TryParse((string)Model.MacroParameters["numberOfPosts"], out numberOfPosts);
    }
}

@if (startNodeId != null)
{
    @* Get the starting page *@
    var startNode = Umbraco.Content(startNodeId);

    //Gets all blogposts to calculate pages
    var blogposts = startNode.Children.Cast<ContentModels.Blogpost>().OrderByDescending(x => x.PublishDate).ToList();
    var pageCount = (int)Math.Ceiling((double)blogposts.Count / (double)numberOfPosts);
    //gets the page from the querystring and sets it to one if it is out of range
    var page = 1;
    if (!string.IsNullOrEmpty(Request.QueryString["page"]))
    {
        int.TryParse(Request.QueryString["page"], out page);
        if (page <= 0 || page > pageCount)
        {
            page = 1;
        }
    }
    //Gets the blogposts for the current page
    var pagedBlogposts = blogposts.Skip((page - 1) * numberOfPosts).Take(numberOfPosts).ToList();
    <b>
        @pagedBlogposts.Count
    </b>
    @*@if (pagedBlogposts.Count > 0)
        {
                <section>
                    <div class="container shadow-flow">
                        <div class="row blog-row">
                            @foreach (ContentModels.Blogpost post in pagedBlogposts)
                            {
                                <a href="@post.Url" alt="@Html.Raw(post.BrowserTitle)">
                                    <div class="cols-3">
                                        <div class="blog-col">
                                            <div class="blog-date">
                                                <div class="blog-date-day">@post.PublishDate.ToString("dd").</div>
                                                <div class="blog-date-month">@post.PublishDate.ToString("MMM")</div>
                                                <div class="blog-date-year">@post.PublishDate.ToString("yyyy")</div>
                                            </div>
                                            <div class="blog-content">
                                                <h2>@Html.Raw(post.PageTitle)</h2>
                                                <p>@Html.Raw(post.Excerpt)</p>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            }
                        </div>
                        <div class="row">
                            <div class="cols-1">
                                <p style="text-align:center">
                                    <a href="@startNode.Url">Se flere</a>
                                </p>
                            </div>
                        </div>
                    </div>
                </section>
            }

            if (blogposts.Count > numberOfPosts && !Model.Content.IsDocumentType("home"))
            {
            <div class="row">
                <div class="cols-1">
                    <div class="section-header">
                        @if (page <= 1)
                        {
                            <span class="nav-link--disabled">Forrige</span>
                        }
                        else
                        {
                            <a class="" href="@(Model.Content.Url + "?page=" + (page - 1))" title="Forrige side">Forrige</a>
                        }

                        @for (int i = 1; i <= pageCount; i++)
                        {
                            <a class="@(page == i ? "nav-link--active" : null)" href="@(Model.Content.Url + "?page=" + i)" title="Næste side">@i</a>
                        }
                        @if (page == pageCount)
                        {
                            <span class="nav-link--disabled">Næste</span>
                        }
                        else
                        {
                            <a class="" href="@(Model.Content.Url + "?page=" + (page + 1))" title="Næste side">Næste</a>
                        }

                    </div>
                </div>
            </div>
            }*@
}
