@using Umbraco.Extensions
@using tvingsbakken.org
@using System
@using Umbraco.Cms.Web.Common.PublishedModels
@using Umbraco.Cms.Web.Common.Views
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Umbraco.Cms.Web;

@{
    //var home = (Home)Model.Root();
    var startNodeId = 1196;//Model.Id; //Model.MacroParameters["startNodeId"] != null ? Model.MacroParameters["startNodeId"] : Model.Content.Id;
    var numberOfPosts = 3;
    //if (Model.MacroParameters["numberOfPosts"] != null)
    //{
    //    int.TryParse((string)Model.MacroParameters["numberOfPosts"], out numberOfPosts);
    //}
}

@if(startNodeId > 0)
{
    @* Get the starting page *@
var startNode = Umbraco.Content(startNodeId);

//Gets all blogposts to calculate pages
var blogposts = startNode.Children<ContentModels.Blogpost>().OrderByDescending(x => x.Value<DateTime>("publishDate")).ToList(); 
var pageCount = (int)Math.Ceiling((double)blogposts.Count / (double)numberOfPosts);
//gets the page from the querystring and sets it to one if it is out of range
var page = 1;
if (!string.IsNullOrEmpty(Context.Request.Query["page"]))
{
    int.TryParse(Context.Request.Query["page"], out page);
    if (page <= 0 || page > pageCount)
    {
        page = 1;
    }
}
//Gets the blogposts for the current page
var pagedBlogposts = blogposts.Skip((page - 1) * numberOfPosts).Take(numberOfPosts).ToList();

    @if (pagedBlogposts.Count > 0)
    {
        <section>
            <div class="container shadow-flow">
                <div class="row blog-row" id="blog-row">
                    @foreach (ContentModels.Blogpost post in pagedBlogposts)
                    {
                        <a href="@post.Url()" alt="@Html.Raw(post.Value("browserTitle"))">
                            <div class="cols-3">
                                <div class="blog-col">
                                    <div class="blog-date">
                                        <div class="blog-date-day">@post.PublishDate.ToString("dd").</div>
                                        <div class="blog-date-month">@post.PublishDate.ToString("MMM")</div>
                                        <div class="blog-date-year">@post.PublishDate.ToString("yyyy")</div>
                                    </div>
                                    <div class="blog-content">
                                        <h2>@Html.Raw(post.PageTitle)</h2>
                                        <p>@Html.Raw(post.Excerpt)</p>
                                    </div>
                                </div>
                            </div>
                        </a>
                    }
                </div>
                <div class="row align-center">
                    <div class="pagination">
                        <span id="button-prev">Forrige</span>
                        <div id="page_number" class="pagenumbers"></div>
                        <span id="button-next">Næste</span>
                    </div>
                </div>
            </div>
        </section>
     }
}
