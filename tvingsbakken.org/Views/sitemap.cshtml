@using Umbraco.Cms.Core.Models.PublishedContent;
@using System.Globalization;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage;
@{
    Layout = null;
    Context.Response.ContentType = "text/xml";
    var siteHomePage = Model.Root();
    var media = Umbraco.MediaAtRoot();
    var mediaFolder = media.FirstOrDefault(x => x.Name.InvariantEquals("dokumenter"));
}<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd" ml-update="aware" ml-stage="preload">
    @{
        RenderSiteMapUrl(siteHomePage, 1.00);
        RenderSiteMapUrl(mediaFolder, 1.00);
    }
</urlset>

@functions
{
    private void RenderSiteMapUrl(IPublishedContent siteMapPage, double priority)
    {
        try
        {
            if ((siteMapPage.HasProperty("noIndex") && !siteMapPage.Value<bool>("noIndex")) || siteMapPage.HasProperty("umbracoExtension"))
            {
    <url>
        <loc>@(siteMapPage.Url(mode: UrlMode.Absolute))</loc>
        <lastmod>@Html.Raw(siteMapPage.UpdateDate.ToUniversalTime().ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss'+00:00'"))</lastmod>
        <changefreq>weekly</changefreq>
        <priority>@priority.ToString("F2", CultureInfo.CreateSpecificCulture("en-US"))</priority>
    </url>
            }
            foreach (IPublishedContent page in siteMapPage.Children)
            {
                RenderSiteMapUrl(page, 0.8 * priority);
            }
        }
        catch(Exception ex)
        {
            <url>
                @ex.Message
            </url>
        }
    }
}

